extend type Query {
  getArticle(slug: String!): Article
  articles(
    tag: String
    author: String
    favorited: String
    before: String
    after: String
    first: Int
    last: Int
  ): ArticleConnection!
  feed(before: String, after: String, first: Int, last: Int): ArticleConnection!
}

extend type Mutation {
  createArticle(input: CreateArticleInput!): Article!
  updateArticle(input: UpdateArticleInput!): Article!
  deleteArticle(input: DeleteArticleInput!): Article!
  favoriteArticle(input: FavoriteArticleInput!): Article!
  unfavoriteArticle(input: UnfavoriteArticleInput!): Article!
}

type Article implements Node {
  id: ID!
  slug: String!
  title: String!
  description: String!
  body: String!
  author: User!
  favorited: Boolean
  favoritedCount: Int!
  createdAt: String!
  updatedAt: String!
}

type ArticleConnection implements Connection {
  edges: [ArticleEdge!]!
  nodes: [Article!]!
  pageInfo: PageInfo!
}

type ArticleEdge implements Edge {
  cursor: String!
  node: Article!
}

input CreateArticleInput {
  title: String!
  description: String!
  body: String!
  tags: [String!]!
}

input UpdateArticleInput {
  slug: String!
  title: String
  description: String
  body: String
}

input DeleteArticleInput {
  slug: String!
}

input FavoriteArticleInput {
  slug: String!
}

input UnfavoriteArticleInput {
  slug: String!
}
